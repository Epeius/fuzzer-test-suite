// Copyright 2016 Google Inc. All Rights Reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
#include <stdint.h>
#include <stdlib.h>
#include <stddef.h>
#include <string>
#include <arpa/nameser.h>
#include <stdio.h>
#include <ares.h>

#include <sys/stat.h>
#include <sys/types.h>
#include <sys/resource.h>
#include <sys/mman.h>
#include <sys/file.h>
#include <unistd.h>

int main(int argc, char* argv[]) {
  if (argc != 2) {
    printf("Usage: %s filename\n", argv[0]);
    return 0;
  }

  int fd;
  fd = open(argv[1], O_RDWR);
  if (fd < 0) {
    printf("can't open target file.\n");
    return -1;
  }

  struct stat st;
  if (fstat(fd, &st)) {
    printf("fstat error.\n");
    close(fd);
    return -1;
  }

  uint8_t* Data = (uint8_t*)mmap(0, st.st_size, PROT_READ, MAP_PRIVATE, fd, 0);
  if (Data == MAP_FAILED) {
    printf("Unable to map file into memory.\n");
    close(fd);
    return -1;
  }

  size_t Size = st.st_size;

  unsigned char *buf;
  int buflen;
  std::string s(reinterpret_cast<const char *>(Data), Size);
  ares_create_query(s.c_str(), ns_c_in, ns_t_a, 0x1234, 0, &buf, &buflen, 0);
  free(buf);
  return 0;
}
